---
import type { Ingredient } from "../types.js";
import { isUndefined } from "../util.js";

interface Props {
  ingredients: Ingredient[];
}

const { ingredients } = Astro.props;

function formatQuantity(n: number): string {
  if (Number.isInteger(n)) {
    return n.toString();
  } else {
    return n.toFixed(1);
  }
}
---

<div class="grid grid-cols-[minmax(100px,_200px)_minmax(30px,_50px)_minmax(30px,_50px)]">
  {
    ingredients.map((i) => (
      <>
        <span class:list={["flex items-center", { "col-span-full": isUndefined(i.qty) }]}>
          <span>{i.name}</span>
          {!isUndefined(i.qty) && <hr class="flex-grow ml-2 mt-1 border-cozy-brown-700/50" />}
        </span>
        {!isUndefined(i.qty) && (
          <span class="flex items-center">
            <hr class="flex-grow mr-2 mt-1 border-cozy-brown-700/50" />
            <span class="text-right mr-1">{formatQuantity(i.qty)}</span>
          </span>
        )}
        {!isUndefined(i.unit) && <span class="text-left">{i.unit}</span>}
      </>
    ))
  }
</div>
